#ifndef __RC_SIMILARITY_PRODUCER_H#define __RC_SIMILARITY_PRODUCER_H#include <stdio.h>#include <deque>#include <rc_types.h>#include <boost/shared_ptr.hpp>#include <string>#include <signaler.h>using namespace std;using namespace boost;class SimilarityProducer { public:    typedef std::deque<double> sMatrixProjectionType;    typedef std::deque< std::deque<double> > sMatrixType;        SimilarityProducer (const string& fq_path);    void operator () (int start_frame, int frames) const;        int bytes_per_pixel () const;    int pixels_per_channel () const;    int channels_per_plane () const;    int planes_per_image () const;    int images_in_movie () const;                const std::string& content_file () const;    int process_start_frame () const;    int process_last_frame () const;        int process_count () const;            const sMatrixType& similarityMatrix () const;        const sMatrixProjectionType& meanProjection () const;            const sMatrixProjectionType& shannonProjection () const;                  private:    struct spImpl;    boost::shared_ptr<spImpl> _impl;          };#endif /* __RC_SIMILARITY_H */